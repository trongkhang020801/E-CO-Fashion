{"ast":null,"code":"/*\n ** Author: Santosh Kumar Dash\n ** Author URL: http://santoshdash.epizy.com/\n ** Github URL: https://github.com/quintuslabs/fashion-cube\n */\nconst validate = (value, rules) => {\n  let isValid = true;\n\n  for (let rule in rules) {\n    switch (rule) {\n      case \"minLength\":\n        isValid = isValid && minLengthValidator(value, rules[rule]);\n        break;\n\n      case \"maxLength\":\n        isValid = isValid && maxLengthValidator(value, rules[rule]);\n        break;\n\n      case \"isRequired\":\n        isValid = isValid && requiredValidator(value);\n        break;\n\n      case \"isEmail\":\n        isValid = isValid && emailValidator(value);\n        break;\n\n      default:\n        isValid = true;\n    }\n  }\n\n  return isValid;\n};\n/**\n * minLength Val\n * @param  value\n * @param  minLength\n * @return\n */\n\n\nconst minLengthValidator = (value, minLength) => {\n  return value.length >= minLength;\n};\n/**\n * minLength Val\n * @param  value\n * @param  minLength\n * @return\n */\n\n\nconst maxLengthValidator = (value, maxLength) => {\n  return value.length == maxLength;\n};\n/**\n * Check to confirm that feild is required\n *\n * @param  value\n * @return\n */\n\n\nconst requiredValidator = value => {\n  return value !== null && value.trim() !== \"\";\n};\n/**\n * Email validation\n *\n * @param value\n * @return\n */\n\n\nconst emailValidator = value => {\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(value).toLowerCase());\n};\n/**\n * Name validation\n *\n * @param value\n * @return\n */\n\n\nconst nameValidator = value => {\n  var re = /^[a-zA-Z]+((['. ][a-zA-Z ])?[a-zA-Z]*)*$/;\n  return re.test(String(value).toLowerCase());\n};\n/**\n * Name validation\n *\n * @param value\n * @return\n */\n\n\nconst mobileValidator = value => {\n  var re = /^[0-9]*$/;\n  return re.test(String(value).toLowerCase());\n};\n/**\n * IP validation\n *\n * @param value\n * @return\n */\n\n\nconst ipValidator = value => {\n  var re = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\n  return re.test(String(value));\n};\n/**\n * IP validation\n *\n * @param value\n * @return\n */\n\n\nconst dateValidator = value => {\n  var re = /^((0?[13578]|10|12)(-|\\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[01]?))(-|\\/)((19)([2-9])(\\d{1})|(20)([01])(\\d{1})|([8901])(\\d{1}))|(0?[2469]|11)(-|\\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[0]?))(-|\\/)((19)([2-9])(\\d{1})|(20)([01])(\\d{1})|([8901])(\\d{1})))$/;\n  return re.test(String(value));\n};\n\nexport default validate;","map":{"version":3,"sources":["D:/ThuLuyen/fashion-cube-master/src/utils/Validator/index.js"],"names":["validate","value","rules","isValid","rule","minLengthValidator","maxLengthValidator","requiredValidator","emailValidator","minLength","length","maxLength","trim","re","test","String","toLowerCase","nameValidator","mobileValidator","ipValidator","dateValidator"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,MAAMA,QAAQ,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACjC,MAAIC,OAAO,GAAG,IAAd;;AAEA,OAAK,IAAIC,IAAT,IAAiBF,KAAjB,EAAwB;AACtB,YAAQE,IAAR;AACE,WAAK,WAAL;AACED,QAAAA,OAAO,GAAGA,OAAO,IAAIE,kBAAkB,CAACJ,KAAD,EAAQC,KAAK,CAACE,IAAD,CAAb,CAAvC;AACA;;AAEF,WAAK,WAAL;AACED,QAAAA,OAAO,GAAGA,OAAO,IAAIG,kBAAkB,CAACL,KAAD,EAAQC,KAAK,CAACE,IAAD,CAAb,CAAvC;AACA;;AAEF,WAAK,YAAL;AACED,QAAAA,OAAO,GAAGA,OAAO,IAAII,iBAAiB,CAACN,KAAD,CAAtC;AACA;;AAEF,WAAK,SAAL;AACEE,QAAAA,OAAO,GAAGA,OAAO,IAAIK,cAAc,CAACP,KAAD,CAAnC;AACA;;AAEF;AACEE,QAAAA,OAAO,GAAG,IAAV;AAlBJ;AAoBD;;AAED,SAAOA,OAAP;AACD,CA3BD;AA6BA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,kBAAkB,GAAG,CAACJ,KAAD,EAAQQ,SAAR,KAAsB;AAC/C,SAAOR,KAAK,CAACS,MAAN,IAAgBD,SAAvB;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMH,kBAAkB,GAAG,CAACL,KAAD,EAAQU,SAAR,KAAsB;AAC/C,SAAOV,KAAK,CAACS,MAAN,IAAgBC,SAAvB;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMJ,iBAAiB,GAAGN,KAAK,IAAI;AACjC,SAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,CAACW,IAAN,OAAiB,EAA1C;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMJ,cAAc,GAAGP,KAAK,IAAI;AAC9B,MAAIY,EAAE,GAAG,yJAAT;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACd,KAAD,CAAN,CAAce,WAAd,EAAR,CAAP;AACD,CAHD;AAKA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,aAAa,GAAGhB,KAAK,IAAI;AAC7B,MAAIY,EAAE,GAAG,0CAAT;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACd,KAAD,CAAN,CAAce,WAAd,EAAR,CAAP;AACD,CAHD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,eAAe,GAAGjB,KAAK,IAAI;AAC/B,MAAIY,EAAE,GAAG,UAAT;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACd,KAAD,CAAN,CAAce,WAAd,EAAR,CAAP;AACD,CAHD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,WAAW,GAAGlB,KAAK,IAAI;AAC3B,MAAIY,EAAE,GAAG,2GAAT;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACd,KAAD,CAAd,CAAP;AACD,CAHD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMmB,aAAa,GAAGnB,KAAK,IAAI;AAC7B,MAAIY,EAAE,GAAG,4PAAT;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACd,KAAD,CAAd,CAAP;AACD,CAHD;;AAKA,eAAeD,QAAf","sourcesContent":["/*\n ** Author: Santosh Kumar Dash\n ** Author URL: http://santoshdash.epizy.com/\n ** Github URL: https://github.com/quintuslabs/fashion-cube\n */\n\nconst validate = (value, rules) => {\n  let isValid = true;\n\n  for (let rule in rules) {\n    switch (rule) {\n      case \"minLength\":\n        isValid = isValid && minLengthValidator(value, rules[rule]);\n        break;\n\n      case \"maxLength\":\n        isValid = isValid && maxLengthValidator(value, rules[rule]);\n        break;\n\n      case \"isRequired\":\n        isValid = isValid && requiredValidator(value);\n        break;\n\n      case \"isEmail\":\n        isValid = isValid && emailValidator(value);\n        break;\n\n      default:\n        isValid = true;\n    }\n  }\n\n  return isValid;\n};\n\n/**\n * minLength Val\n * @param  value\n * @param  minLength\n * @return\n */\nconst minLengthValidator = (value, minLength) => {\n  return value.length >= minLength;\n};\n\n/**\n * minLength Val\n * @param  value\n * @param  minLength\n * @return\n */\nconst maxLengthValidator = (value, maxLength) => {\n  return value.length == maxLength;\n};\n\n/**\n * Check to confirm that feild is required\n *\n * @param  value\n * @return\n */\nconst requiredValidator = value => {\n  return value !== null && value.trim() !== \"\";\n};\n\n/**\n * Email validation\n *\n * @param value\n * @return\n */\nconst emailValidator = value => {\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(value).toLowerCase());\n};\n\n/**\n * Name validation\n *\n * @param value\n * @return\n */\nconst nameValidator = value => {\n  var re = /^[a-zA-Z]+((['. ][a-zA-Z ])?[a-zA-Z]*)*$/;\n  return re.test(String(value).toLowerCase());\n};\n/**\n * Name validation\n *\n * @param value\n * @return\n */\nconst mobileValidator = value => {\n  var re = /^[0-9]*$/;\n  return re.test(String(value).toLowerCase());\n};\n/**\n * IP validation\n *\n * @param value\n * @return\n */\nconst ipValidator = value => {\n  var re = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\n  return re.test(String(value));\n};\n/**\n * IP validation\n *\n * @param value\n * @return\n */\nconst dateValidator = value => {\n  var re = /^((0?[13578]|10|12)(-|\\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[01]?))(-|\\/)((19)([2-9])(\\d{1})|(20)([01])(\\d{1})|([8901])(\\d{1}))|(0?[2469]|11)(-|\\/)(([1-9])|(0[1-9])|([12])([0-9]?)|(3[0]?))(-|\\/)((19)([2-9])(\\d{1})|(20)([01])(\\d{1})|([8901])(\\d{1})))$/;\n  return re.test(String(value));\n};\n\nexport default validate;\n"]},"metadata":{},"sourceType":"module"}